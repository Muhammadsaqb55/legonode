/**
 * Represents a Category
 */
export class Category {
    /**
     * Method to get a specific category
     *
     * Usage:
     *
     * ```
     * var req = Category.get(123);
     * client.send(req).then(category => console.log(category));
     * ```
     *
     * @param {number} categoryId Catalog item type
     * @return {BricklinkRequest} A request that resolves to a {@link Category} instance.
     */
    static get(categoryId: number): BricklinkRequest;
    /**
     * Get a list of all colors
     * Usage:
     *
     * ```
     * var req = Category.all();
     * client.send(req).then(categories => console.log(categories));
     * ```
     *
     * @return {BricklinkRequest} A request that resolves to an array of {@link Category}.
     */
    static all(): BricklinkRequest;
    /**
     * Create a new instance of a category
     * @param {object} [data] API response data.
     * @param {number} [data.category_id=0] The category id. i.e. - 10
     * @param {string} [data.category_name] The category name. i.e. - Container
     * @param {number} [data.parent_id] The parent category id or 0 if root category. i.e. - 0
     */
    constructor(data?: {
        category_id?: number;
        category_name?: string;
        parent_id?: number;
    });
    /** @type {number} */
    category_id: number;
    /** @type {string} */
    category_name: string;
    /** @type {number} */
    parent_id: number;
}
import { BricklinkRequest } from "../request";
