/**
 * Represents a color object
 */
export class Color {
    /**
     * Method to get specific color details
     *
     * Usage:
     *
     * ```
     * var req = Color.get(10);
     * client.send(req).then(color => console.log(color));
     * ```
     *
     * @param {number} colorId a color id.
     * @return {BricklinkRequest} A request that resolves to a {@link Color} instance.
     */
    static get(colorId: number): BricklinkRequest;
    /**
     * Get a list of all colors
     *
     * Usage:
     *
     * ```
     * var req = Color.all();
     * client.send(req).then(colors => console.log(colors));
     * ```
     *
     * @return {BricklinkRequest} A request that resolves to an array of {@link Color}.
     */
    static all(): BricklinkRequest;
    /**
     * Create a new instance of a color
     * @param {object} [data] API response data.
     * @param {number} [data.color_id=0] The color id. i.e. - 10
     * @param {string} [data.color_name] The color name. i.e. - Dark Gray
     * @param {string} [data.color_code] The HTML HEX associated to the color. i.e. - 6b5a5a
     * @param {string} [data.color_type] A group that the color belongs to. i.e. - Solid, Transparent, etc...
     */
    constructor(data?: {
        color_id?: number;
        color_name?: string;
        color_code?: string;
        color_type?: string;
    });
    /** @type {number} */
    color_id: number;
    /** @type {string} */
    color_name: string;
    /** @type {string} */
    color_code: string;
    /** @type {string} */
    color_type: string;
}
import { BricklinkRequest } from "../request";
